name: CI/CD Pipeline for Nginx Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Build and Push Docker Image to Registry
  build_and_push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx-app:${{ github.sha }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/nginx-app:${{ github.sha }}

  # Step 2: Deploy to Kubernetes
  deploy_to_kubernetes:
    runs-on: ubuntu-latest
    needs: build_and_push  # This step depends on the build_and_push job

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.0'

    - name: Configure kubectl
      run: |
        kubectl config set-cluster my-cluster --server=${{ secrets.K8S_API_SERVER }}
        kubectl config set-credentials my-user --token=${{ secrets.K8S_TOKEN }}
        kubectl config set-context my-context --cluster=my-cluster --user=my-user
        kubectl config use-context my-context

    - name: Deploy to Kubernetes
      run: |
        export GITHUB_SHA=${{ github.sha }}
        cat deployment.yml | envsubst | kubectl apply -f -
        kubectl rollout status deployment/nginx-deployment